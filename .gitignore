# vscode settings
.vscode
.mypy_cache

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
*.egg-info/
.installed.cfg
*.egg
MANIFEST
dist/

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/


# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Cython cpp files
lib/*.cpp

##################### Project specific additions ###############################
# just throw anything in a dump-folder to not add to git
dump
# example making and output
/example/making*
/example/initialize/epoch01
/example/initialize/example_config_fixed.py
/example/remote_dir
/example/after_e1/epoch02
/example/after_e1/figs
/example/after_e1/analysis
/example/after_e1/epoch01/rep*/fval_data.npz
/example/after_e1/epoch01/rep*/.mdrun.xtc_offsets.npz
/example/after_e1/epoch01/rep*/.mdrun.xtc_offsets.lock
/example/after_e1/initial/start.pdb
/example/after_e1/initial/output_trjconv.txt
